#!/bin/sh
#

OS=`uname`
CFG=config.mk
TMP=`mktemp`

heading()
{
        echo "# This makefile snippet is generated by the mrouted configure script." > $CFG
        echo >> $CFG
        echo "# Initial definitions ..." >> $CFG
        echo "# -D_GNU_SOURCE Use GNU extensions, where possible" >> $CFG
        echo "# -D_BSD_SOURCE Use functions derived from 4.3 BSD Unix rather than POSIX.1" >> $CFG
        echo "DEFS          = -D_BSD_SOURCE -D_GNU_SOURCE" >> $CFG
        echo "# EXTRA_OBJS  = For locally provided objects missing on some platforms, e.g., strlcpy.o"  >> $CFG
        echo "# EXTRA_LIBS  = For platform specific libraries, e.g., -lutil" >> $CFG
        echo >> $CFG
        echo "# $OS specific settings ..." >> $CFG
}

usage()
{
        echo "Run this script to configure mrouted for your operating system."
        echo
        echo "Usage: $0 [ARG]"
        echo
        echo "  --enable-rsrr          Routing Support for Resource Reservations, for RSVP."
        echo "  --with-includes=PATH   Use this if the multicast header files are not in the"
        echo "                         standard location on your system. E.g., /sys"
        echo
        echo "Report any bugs to https://github.com/troglobit/mrouted/issues"
        echo

        exit 1
}

echo > $TMP
echo "# Enabled features ..." >> $TMP

while [ "$*" != "" ]; do
        opt=`expr "$1" : "--\([^=]*\)=.*"`
        arg=`expr "$1" : "--[^=]*=\(.*\)"`
        if [ -z "$opt" ]; then
                opt=`expr "$1" : "--\(.*\)"`
        fi
        shift

        case $opt in
                enable-rsrr)
                        echo "DEFS         += -DRSRR" >> $TMP
                        echo "RSRR_OBJS     = rsrr.o" >> $TMP
                        ;;

                with-includes)
                        echo "INCLUDES     += -I$arg" >> $TMP
                        ;;

                help)
                        usage
                        ;;

                *)
                        #echo "Unknown option: $opt"
                        #usage
                        ;;
        esac
done

## BSDI		-D__bsdi__ is defined by the OS
#INCLUDES     =
#DEFS        +=
#EXTRA_OBJS   = strlcpy.o pidfile.o strtonum.o

## SunOS, OSF1, gcc
#INCLUDES     =
#DEFS        += -DSunOS=43
#EXTRA_OBJS   = strlcpy.o pidfile.o strtonum.o

## SunOS, OSF1, cc
#INCLUDES     =
#DEFS        += -DSunOS=43
#EXTRA_OBJS   = strlcpy.o pidfile.o strtonum.o

## IRIX
#INCLUDES     =
#DEFS        += -D_BSD_SIGNALS -DIRIX
#EXTRA_OBJS   = strlcpy.o pidfile.o strtonum.o

## Solaris 2.5, gcc
#INCLUDES     =
#DEFS        += -DSUNOS5 -DSunOS=55
## Solaris 2.5, cc
#INCLUDES     =
#DEFS        += -DSUNOS5 -DSunOS=55
## Solaris 2.6
#INCLUDES     =
#DEFS        += -DSUNOS5 -DSunOS=56
## Solaris 2.x
#EXTRA_OBJS   = strlcpy.o pidfile.o strtonum.o
#EXTRA_LIBS   = -L/usr/ucblib -lucb -L/usr/lib -lsocket -lnsl

# For uClibc based Linux systems, add -DHAVE_STRLCPY to DEFS
case $OS in
        Linux)
                heading
	        echo "INCLUDES     =" >> $CFG
	        echo "DEFS        += -DIOCTL_OK_ON_RAW_SOCKET" >> $CFG
	        echo "EXTRA_OBJS   = strlcpy.o pidfile.o strtonum.o" >> $CFG
	        echo "EXTRA_LIBS   =" >> $CFG
	        ;;

        FreeBSD)
                heading
	        echo "INCLUDES     =" >> $CFG
	        echo "DEFS        += -DHAVE_STRTONUM -DHAVE_STRLCPY" >> $CFG
	        echo "EXTRA_OBJS   = pidfile.o" >> $CFG
	        echo "EXTRA_LIBS   =" >> $CFG
	        ;;

        NetBSD)
                heading
	        echo "INCLUDES     =" >> $CFG
	        echo "DEFS        += -DHAVE_STRLCPY -DHAVE_PIDFILE" >> $CFG
	        echo "EXTRA_OBJS   = strtonum.o" >> $CFG
	        echo "EXTRA_LIBS   = -lutil" >> $CFG
	        ;;

        OpenBSD)
                heading
	        echo "INCLUDES     =" >> $CFG
	        echo "DEFS        += -DHAVE_STRTONUM -DHAVE_STRLCPY -DHAVE_PIDFILE" >> $CFG
	        echo "EXTRA_OBJS   =" >> $CFG
	        echo "EXTRA_LIBS   = -lutil" >> $CFG
	        ;;

        *)
	        rm $CFG
	        echo "$OS is currently unsupported.  Help out at https://github.com/troglobit/mrouted/"
	        exit 1
	        ;;
esac

cat $TMP >> $CFG
rm $TMP

exit 0

